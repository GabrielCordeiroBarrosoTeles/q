'''
GRUPO 3

üöÄ Desafio [005] Aplica√ß√£o de Gest√£o de Tarefas

O objetivo do desafio √© realizar a modelagem de um banco de dados simples e desenvolver uma aplica√ß√£o de gest√£o de tarefas.

Dever√° ser projetada uma aplica√ß√£o onde os usu√°rios podem criar, visualizar, atualizar e excluir suas tarefas. Cada tarefa pode ter um t√≠tulo, uma descri√ß√£o, uma data de cria√ß√£o e uma data de conclus√£o, siga as orienta√ß√µes abaixo para concluir o desafio.

1.Identifique as Entidades e os Atributos:
    - Identifique as entidades que participam do processo, os seus atributos e o relacionamento entre elas.

2. Crie as Tabelas no Banco de Dados:
    - Utilize um SGBD de sua escolha (por exemplo, SQLite, MySQL, PostgreSQL) para criar as tabelas conforme o diagrama desenhado.

3.Consulte no Banco de Dados:
    - Crie um script que realize as opera√ß√µes b√°sicas de um CRUD (Create, Read, Update, Delete) nas tabelas criadas.
    
4. Apresenta√ß√£o
    - Na avalia√ß√£o ser√£o cobrados os seguintes itens:
        1. Banco modelado
        2. Script
    - Organiza√ß√£o de c√≥digo e boas pr√°ticas ser√£o exigidas.

Obs: N√£o ser√° necess√°ria uma interface, a aplica√ß√£o poder√° funcionar somente¬†pelo¬†terminal
'''
import mysql.connector
from datetime import datetime

# Conex√£o com o banco de dados
conexao = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",
    database="bd_cordeiro"
)
cursor = conexao.cursor()

while True:
    # Menu de op√ß√µes
    opcao = int(input("Lista de Tarefas\n1-Criar \n2-Exibir \n3-Editar \n4-Deletar \n5-Encerrar\nEscolha uma op√ß√£o: "))

    if opcao == 1:
        # Criar tarefa
        titulo = input("Informe o t√≠tulo da tarefa: ")
        descricao = input("Informe a descri√ß√£o da tarefa: ")
        
        data_criacao = input("Informe a data de cria√ß√£o (dd/mm/yyyy): ")
        data_criacao = datetime.strptime(data_criacao, "%d/%m/%Y").date()
        
        data_conclusao = input("Informe a data de conclus√£o (dd/mm/yyyy): ")
        data_conclusao = datetime.strptime(data_conclusao, "%d/%m/%Y").date()
        
        # Verifica√ß√£o das datas
        if data_criacao > data_conclusao:
            print("Erro: A data de cria√ß√£o n√£o pode ser maior que a data de conclus√£o.")
        else:
            comando = f"INSERT INTO tarefa (titulo, descricao, data_criacao, data_conclusao) VALUES ('{titulo}', '{descricao}', '{data_criacao}', '{data_conclusao}')"
            cursor.execute(comando)
            conexao.commit()
            print("Tarefa criada com sucesso.")

    elif opcao == 2:
        # Exibir todas as tarefas
        comando = 'SELECT * FROM tarefa'
        cursor.execute(comando)
        resultado = cursor.fetchall()
        for tarefa in resultado:
            id, titulo, descricao, data_criacao, data_conclusao = tarefa
            data_criacao = data_criacao.strftime("%d/%m/%Y")
            data_conclusao = data_conclusao.strftime("%d/%m/%Y")
            print(f"\nT√≠tulo: {titulo}, \nDescri√ß√£o: {descricao}, \nData de Cria√ß√£o: {data_criacao}, \nData de Conclus√£o: {data_conclusao}")

    elif opcao == 3:
        # Editar tarefa
        pesq_id = int(input("Informe o ID da tarefa que deseja editar: "))
        campo = input("Qual campo deseja atualizar (titulo, descricao, data_criacao, data_conclusao)? ")
        novo_valor = input(f"Informe o novo valor para {campo}: ")
        
        if campo in ["titulo", "descricao"]:
            novo_valor = f"'{novo_valor}'"  # Adiciona aspas para valores de texto
        elif campo in ["data_criacao", "data_conclusao"]:
            novo_valor = datetime.strptime(novo_valor, "%d/%m/%Y").date()
            novo_valor = f"'{novo_valor}'"
        
        comando = f"UPDATE tarefa SET {campo}={novo_valor} WHERE id={pesq_id}"
        cursor.execute(comando)
        conexao.commit()
        print("Tarefa atualizada com sucesso.")

    elif opcao == 4:
        # Deletar tarefa
        pesq_id = int(input("Informe o ID da tarefa que deseja deletar: "))
        comando = f"DELETE FROM tarefa WHERE id={pesq_id}"
        cursor.execute(comando)
        conexao.commit()
        print("Tarefa deletada com sucesso.")

    elif opcao == 5:
        # Encerrar
        print("Encerrando o programa.")
        break

    else:
        print("Op√ß√£o inv√°lida!")

# Fecha a conex√£o
cursor.close()
conexao.close()
